<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PicoChat.Views"
        xmlns:models="clr-namespace:PicoChat.Models"
        xmlns:data="clr-namespace:PicoChat.SampleData"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        x:Name="ChatWindowView"
        x:Class="PicoChat.Views.ChatWindow"
        WindowStartupLocation="CenterScreen"
        Width="600"
        Height="400"
        MinWidth="600"
        MinHeight="400"
        DataContext="{Binding ElementName=ChatWindowView}"
        Title="{Binding ViewModel.Title}"
        Background="{DynamicResource MaterialDesignPaper}"
        d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type={x:Type data:SampleChatView}}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListView.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ToolButtonStyle"
                   TargetType="{x:Type Button}">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Margin"
                        Value="5" />
                <Setter Property="Padding"
                        Value="1" />
                <Setter Property="Height"
                        Value="25" />
                <Setter Property="Width"
                        Value="25" />
            </Style>
            <DataTemplate DataType="{x:Type models:ChatSystemMessage}">
                <StackPanel HorizontalAlignment="Center">
                    <WrapPanel Margin="5"
                               Background="LightGray">
                        <TextBox Background="Transparent"
                                 BorderThickness="0"
                                 Margin="0"
                                 FontFamily="Consolas"
                                 Foreground="BlueViolet"
                                 Text="{Binding Tag, Mode=OneWay}"
                                 IsReadOnly="True"
                                 TextWrapping="Wrap"
                                 TextAlignment="Center"
                                 Style="{StaticResource {x:Type TextBox}}">
                        </TextBox>
                        <TextBlock Text=" " />
                        <TextBox Background="Transparent"
                                 BorderThickness="0"
                                 Margin="0"
                                 FontFamily="Consolas"
                                 Text="{Binding Content, Mode=OneWay}"
                                 IsReadOnly="True"
                                 TextWrapping="Wrap"
                                 TextAlignment="Center"
                                 Style="{StaticResource {x:Type TextBox}}">
                        </TextBox>
                    </WrapPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type models:ChatTextMessage}">
                <StackPanel HorizontalAlignment="Left">
                    <WrapPanel>
                        <TextBlock Text="{Binding Room}"
                                   Foreground="BlueViolet" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding Name}"
                                   Foreground="BlueViolet" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding UtcTime}"
                                   Foreground="ForestGreen" />
                        <Ellipse Width="5"
                                 Height="5"
                                 Margin="5,0,0,0"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Center">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                    <Setter Property="Fill"
                                            Value="DarkRed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasReceipt}"
                                                     Value="True">
                                            <Setter Property="Fill"
                                                    Value="Green" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Name}"
                                                     Value="&lt;this&gt;">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                    </WrapPanel>
                    <TextBox Background="Transparent"
                             BorderThickness="0"
                             Margin="10, 0, 0, 10"
                             FontFamily="{Binding FontInfo.FontFamily}"
                             FontSize="{Binding FontInfo.FontSize}"
                             FontStyle="{Binding FontInfo.FontStyle}"
                             FontWeight="{Binding FontInfo.FontWeight}"
                             Foreground="{Binding ColorInfo.Foreground}"
                             Text="{Binding Content, Mode=OneWay}"
                             IsReadOnly="True"
                             TextWrapping="Wrap">
                    </TextBox>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type models:ChatImageMessage}">
                <StackPanel>
                    <WrapPanel>
                        <TextBlock Text="{Binding Room}"
                                   Foreground="BlueViolet" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding Name}"
                                   Foreground="BlueViolet" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding UtcTime}"
                                   Foreground="ForestGreen" />
                        <Ellipse Width="5"
                                 Height="5"
                                 Margin="5,0,0,0"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Center">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                    <Setter Property="Fill"
                                            Value="DarkRed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasReceipt}"
                                                     Value="True">
                                            <Setter Property="Fill"
                                                    Value="Green" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsLocalMessage}"
                                                     Value="True">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                    </WrapPanel>
                    <Image Source="{Binding ImageSource}"
                           Margin="5"></Image>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type models:ChatFileMessage}">
                <StackPanel Margin="0,0,0,5">
                    <WrapPanel>
                        <TextBlock Text="{Binding Room}"
                                   Foreground="BlueViolet" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding Name}"
                                   Foreground="BlueViolet" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding UtcTime}"
                                   Foreground="ForestGreen" />
                        <Ellipse Width="5"
                                 Height="5"
                                 Margin="5,0,0,0"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Center">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                    <Setter Property="Fill"
                                            Value="DarkRed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasReceipt}"
                                                     Value="True">
                                            <Setter Property="Fill"
                                                    Value="Green" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsLocalMessage}"
                                                     Value="True">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                    </WrapPanel>
                    <WrapPanel Margin="5,5,5,5">
                        <Image Margin="0, 0, 0, 0"
                               Width="32"
                               Height="32"
                               Source="/PicoChat;component/Images/file.png"></Image>
                        <StackPanel>
                            <TextBox Background="Transparent"
                                     BorderThickness="0"
                                     Margin="10, 0, 10, 0"
                                     FontFamily="Consolas"
                                     FontSize="14"
                                     Text="{Binding FileName, Mode=OneWay}"
                                     IsReadOnly="True"
                                     TextWrapping="Wrap"
                                     VerticalAlignment="Center" />
                            <TextBlock Margin="10, 0, 10, 0"
                                       FontFamily="Consolas"
                                       FontSize="14"
                                       Foreground="DarkGray"
                                       Text="{Binding FileSize}" />
                        </StackPanel>
                        <Button VerticalAlignment="Bottom"
                                Width="24"
                                Height="24"
                                BorderBrush="{x:Null}"
                                Background="Transparent"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=local:ChatWindow}, Path=ViewModel.PullFileCommand}"
                                CommandParameter="{Binding}">
                            <Image Source="/PicoChat;component/Images/download.png"></Image>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsTransfering}"
                                                     Value="True">
                                            <Setter Property="Visibility"
                                                    Value="Hidden" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsLocalMessage}"
                                                           Value="True" />
                                                <Condition Binding="{Binding HasReceipt}"
                                                           Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility"
                                                    Value="Hidden" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </WrapPanel>
                    <ProgressBar Height="5"
                                 Value="{Binding Process}">
                        <ProgressBar.Style>
                            <Style TargetType="ProgressBar">
                                <Setter Property="Visibility"
                                        Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsTransfering}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ProgressBar.Style>
                    </ProgressBar>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <md:DialogHost>
        <Grid Margin="0,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ListBox x:Name="JoinedRoomList"
                         Margin="0,0,0,0"
                         BorderThickness="0,0,1,0"
                         ItemsSource="{Binding ViewModel.JoinRooms}"
                         SelectedItem="{Binding ViewModel.SelectedRoom}"
                         SelectionChanged="JoinedRoomList_SelectionChanged"
                         BorderBrush="{DynamicResource MaterialDesignDivider}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Border Grid.Row="1"
                        BorderThickness="0,1,1,0"
                        BorderBrush="{DynamicResource MaterialDesignDivider}">
                    <Button Margin="5"
                            Padding="0"
                            Style="{StaticResource MaterialDesignFlatButton}"
                            ToolTip="Join room"
                            Command="{x:Static md:DialogHost.OpenDialogCommand}">
                        <Button.CommandParameter>
                            <StackPanel Margin="16">
                                <TextBlock>Join a room.</TextBlock>
                                <TextBox Margin="0,8,0,0"
                                         HorizontalAlignment="Stretch" />
                                <StackPanel HorizontalAlignment="Right"
                                            Orientation="Horizontal">
                                    <Button Margin="0,8,8,0"
                                            Command="md:DialogHost.CloseDialogCommand"
                                            IsDefault="True"
                                            Style="{StaticResource MaterialDesignFlatButton}">
                                        <Button.CommandParameter>
                                            <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">True</system:Boolean>
                                        </Button.CommandParameter>
                                        JOIN
                                    </Button>
                                    <Button Margin="0,8,8,0"
                                            Command="md:DialogHost.CloseDialogCommand"
                                            IsCancel="True"
                                            Style="{StaticResource MaterialDesignFlatButton}">
                                        <Button.CommandParameter>
                                            <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">False</system:Boolean>
                                        </Button.CommandParameter>
                                        CANCEL
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </Button.CommandParameter>
                        <WrapPanel>
                            <md:PackIcon Kind="PlusCircleOutline"
                                         VerticalAlignment="Center"
                                         Foreground="{DynamicResource PrimaryHueMidBrush}" />
                            <TextBlock Text="   Join" />
                        </WrapPanel>
                    </Button>
                </Border>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ListView Grid.Row="0"
                          Margin="0,0,0,5"
                          BorderThickness="0"
                          x:Name="MessageListView"
                          ItemsSource="{Binding ViewModel.Messages}"
                          IsSynchronizedWithCurrentItem="True"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          BorderBrush="{DynamicResource MaterialDesignDivider}"
                          HorizontalContentAlignment="Stretch"
                          Focusable="False">
                </ListView>
                <Border Grid.Row="1"
                        Height="Auto"
                        BorderThickness="0,1,0,1"
                        BorderBrush="{DynamicResource MaterialDesignDivider}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Button Grid.Column="0"
                                ToolTip="Send attachment"
                                Style="{StaticResource ToolButtonStyle}"
                                Click="SendFileButton_OnClick">
                            <Image Source="/PicoChat;component/Images/attachment.png" />
                        </Button>
                        <Button Grid.Column="1"
                                ToolTip="Send image"
                                Style="{StaticResource ToolButtonStyle}"
                                Click="SendImageButton_OnClick">
                            <Image Source="/PicoChat;component/Images/picture.png"></Image>
                        </Button>
                        <Button Grid.Column="2"
                                ToolTip="Set the font"
                                Style="{StaticResource ToolButtonStyle}"
                                Command="{Binding ViewModel.SetMessageFontCommand}">
                            <Image Source="/PicoChat;component/Images/font.png"
                                   RenderTransformOrigin="0.583,0.25"></Image>
                        </Button>
                        <Button Grid.Column="3"
                                ToolTip="Set the textcolor"
                                Style="{StaticResource ToolButtonStyle}"
                                Command="{Binding ViewModel.SetMessageColorCommand}">
                            <Image Source="/PicoChat;component/Images/textcolor.png"></Image>
                        </Button>
                    </Grid>
                </Border>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBox Grid.Column="0"
                             Grid.ColumnSpan="5"
                             Margin="5,0,5,0"
                             TextWrapping="Wrap"
                             FontSize="14"
                             VerticalAlignment="Center"
                             Height="Auto"
                             MaxHeight="150"
                             VerticalScrollBarVisibility="Auto"
                             Text="{Binding ViewModel.MessageToSend, UpdateSourceTrigger=PropertyChanged}"
                             md:HintAssist.Hint="Message To Send...">
                        <TextBox.InputBindings>
                            <KeyBinding Command="{Binding ViewModel.SendMessageCommand}"
                                        Key="Enter" />
                        </TextBox.InputBindings>
                    </TextBox>
                    <Button Grid.Column="5"
                            Margin="5"
                            VerticalAlignment="Center"
                            Command="{Binding ViewModel.SendMessageCommand}"
                            ToolTip="Send Message">
                        <md:PackIcon Kind="Send" />
                    </Button>
                </Grid>
            </Grid>
        </Grid>
    </md:DialogHost>
</Window>